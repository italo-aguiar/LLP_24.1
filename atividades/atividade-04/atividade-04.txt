Atividades de programa√ß√£o em **linguagem C** que envolvem o uso de declara√ß√µes condicionais:

1. Atividade com `if`:
- Descri√ß√£o: Escreva um programa que leia um n√∫mero inteiro e verifique se ele √© positivo, negativo ou zero. Use a declara√ß√£o `if`.
- Dica: Use a fun√ß√£o `scanf` para ler o n√∫mero e compare-o com zero.

#include <stdio.h>

int main() {
    int numero;

    // Leia o n√∫mero inteiro
    printf("Digite um n√∫mero inteiro: ");
    scanf("%d", &numero);

    // Verifique o sinal do n√∫mero
    if (numero > 0) {
        printf("O n√∫mero √© positivo.\n");
    } else if (numero < 0) {
        printf("O n√∫mero √© negativo.\n");
    } else {
        printf("O n√∫mero √© zero.\n");
    }

    return 0;
}


####################################################################################


2. Atividade com `if else`:
- Descri√ß√£o: Crie um programa que determine se um ano √© bissexto ou n√£o. 
 Um ano √© bissexto se for divis√≠vel por 4, exceto quando √© divis√≠vel por 100 (a menos que tamb√©m seja divis√≠vel por 400).
- Dica: Use a declara√ß√£o `if else` para verificar as condi√ß√µes.

#include <stdio.h>

int main() {
    int ano;

    // Leia o ano
    printf("Digite um ano: ");
    scanf("%d", &ano);

    // Verifique se o ano √© bissexto
    if (ano % 4 == 0) {
        if (ano % 100 == 0) {
            if (ano % 400 == 0) {
                printf("O ano %d √© bissexto.\n", ano);
            } else {
                printf("O ano %d n√£o √© bissexto.\n", ano);
            }
        } else {
            printf("O ano %d √© bissexto.\n", ano);
        }
    } else {
        printf("O ano %d n√£o √© bissexto.\n", ano);
    }

    return 0;
}


####################################################################################


3. Atividade com `switch`:
- Descri√ß√£o: Implemente um programa que leia um n√∫mero de 1 a 7 e exiba o dia da semana correspondente (1 = domingo, 2 = segunda-feira, etc.).
- Dica: Use a estrutura `switch` para associar os n√∫meros aos dias da semana.

#include <stdio.h>
#include <time.h>

int main() {
    struct tm data;

    // Inserir a data
    printf("Digite o dia (1-31): ");
    scanf("%d", &data.tm_mday);
    printf("Digite o m√™s (1-12): ");
    scanf("%d", &data.tm_mon);
    printf("Digite o ano: ");
    scanf("%d", &data.tm_year);

    // Ajustar o m√™s e o ano
    data.tm_mon -= 1; // M√™s come√ßa em 0
    data.tm_year -= 1900; // Ano come√ßa em 1900

    // Calcular o dia da semana
    mktime(&data);

    // Imprimir o dia da semana
    printf("Dia da semana: ");
    switch (data.tm_wday) {
        case 0:
            printf("Domingo\n");
            break;
        case 1:
            printf("Segunda-feira\n");
            break;
        case 2:
            printf("Ter√ßa-feira\n");
            break;
        case 3:
            printf("Quarta-feira\n");
            break;
        case 4:
            printf("Quinta-feira\n");
            break;
        case 5:
            printf("Sexta-feira\n");
            break;
        case 6:
            printf("S√°bado\n");
            break;
    }

    return 0;
}


####################################################################################

4. Atividade com Operador Tern√°rio:
- Descri√ß√£o: Escreva um programa que leia dois n√∫meros inteiros e exiba o maior deles usando o operador tern√°rio.
- Dica: Use a express√£o `(a > b) ? a : b` para encontrar o maior n√∫mero.

#include <stdio.h>

int main() {
    int a, b;

    // Ler dois n√∫meros inteiros
    printf("Digite o primeiro n√∫mero: ");
    if (scanf("%d", &a)!= 1) {
        printf("Erro: n√£o √© um n√∫mero inteiro.\n");
        return 1;
    }
    printf("Digite o segundo n√∫mero: ");
    if (scanf("%d", &b)!= 1) {
        printf("Erro: n√£o √© um n√∫mero inteiro.\n");
        return 1;
    }

    // Encontrar o maior n√∫mero usando o operador tern√°rio
    int maior = (a > b)? a : b;

    // Exibir o maior n√∫mero
    printf("O maior n√∫mero √©: %d\n", maior);

    return 0;
}


####################################################################################

Lembre-se de testar seus programas com diferentes entradas para garantir que funcionem corretamente! üåü


