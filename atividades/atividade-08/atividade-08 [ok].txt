Exerc√≠cios de programa√ß√£o em linguagem C que abordam vari√°veis, tipos de dados e operadores:

1. Calculadora Simples
- Crie um programa que leia dois n√∫meros inteiros do usu√°rio e exiba a soma, subtra√ß√£o, multiplica√ß√£o e divis√£o desses n√∫meros.

#include <stdio.h>

int main() {
    int num1, num2; // vari√°veis para armazenar os n√∫meros inteiros

    // Ler os n√∫meros inteiros do usu√°rio
    printf("Digite o primeiro n√∫mero inteiro: ");
    scanf("%d", &num1);
    printf("Digite o segundo n√∫mero inteiro: ");
    scanf("%d", &num2);

    // Calcular e exibir as opera√ß√µes
    printf("Soma: %d + %d = %d\n", num1, num2, num1 + num2);
    printf("Subtra√ß√£o: %d - %d = %d\n", num1, num2, num1 - num2);
    printf("Multiplica√ß√£o: %d * %d = %d\n", num1, num2, num1 * num2);

    // Verificar se o segundo n√∫mero √© diferente de zero antes de fazer a divis√£o
    if (num2!= 0) {
        printf("Divis√£o: %d / %d = %d\n", num1, num2, num1 / num2);
    } else {
        printf("Erro: n√£o √© poss√≠vel dividir por zero!\n");
    }

    return 0;
}

#########################

2. Convers√£o de Temperatura
- Escreva um programa que converta uma temperatura em graus Celsius para Fahrenheit. O usu√°rio deve inserir a temperatura em Celsius.

#include <stdio.h>

int main() {
    float celsius, fahrenheit; // vari√°veis para armazenar as temperaturas

    // Ler a temperatura em Celsius do usu√°rio
    printf("Digite a temperatura em Celsius: ");
    scanf("%f", &celsius);

    // Converter Celsius para Fahrenheit
    fahrenheit = (celsius * 9.0 / 5.0) + 32.0;

    // Exibir o resultado
    printf("%.2f¬∞C √© igual a %.2f¬∞F\n", celsius, fahrenheit);

    return 0;
}

#########################

3. Exerc√≠cio: Verifica√ß√£o de N√∫mero Par
- Pe√ßa ao usu√°rio para digitar um n√∫mero inteiro. Verifique se o n√∫mero √© par ou √≠mpar e exiba a mensagem correspondente.

#include <stdio.h>

int main() {
    int num; // vari√°vel para armazenar o n√∫mero inteiro

    // Ler o n√∫mero inteiro do usu√°rio
    printf("Digite um n√∫mero inteiro: ");
    scanf("%d", &num);

    // Verificar se o n√∫mero √© par ou √≠mpar
    if (num % 2 == 0) {
        printf("%d √© um n√∫mero par.\n", num);
    } else {
        printf("%d √© um n√∫mero √≠mpar.\n", num);
    }

    return 0;
}

#########################

4. C√°lculo de M√©dia Ponderada
- Leia tr√™s notas (pesos 2, 3 e 5) e calcule a m√©dia ponderada. Exiba a m√©dia resultante.

#include <stdio.h>

int main() {
    float nota1, nota2, nota3, media; // vari√°veis para armazenar as notas e a m√©dia

    // Ler as notas do usu√°rio
    printf("Digite a nota 1 (peso 2): ");
    scanf("%f", &nota1);
    printf("Digite a nota 2 (peso 3): ");
    scanf("%f", &nota2);
    printf("Digite a nota 3 (peso 5): ");
    scanf("%f", &nota3);

    // Calcular a m√©dia ponderada
    media = (nota1 * 2 + nota2 * 3 + nota3 * 5) / (2 + 3 + 5);

    // Exibir a m√©dia resultante
    printf("A m√©dia ponderada √©: %.2f\n", media);

    return 0;
}

#########################

5. Troca de Valores
- Leia dois n√∫meros inteiros e troque seus valores sem usar uma vari√°vel tempor√°ria.

#include <stdio.h>

int main() {
    int a, b; // vari√°veis para armazenar os dois n√∫meros inteiros

    // Ler os dois n√∫meros inteiros do usu√°rio
    printf("Digite o primeiro n√∫mero inteiro (a): ");
    scanf("%d", &a);
    printf("Digite o segundo n√∫mero inteiro (b): ");
    scanf("%d", &b);

    // Trocar os valores sem usar uma vari√°vel tempor√°ria
    a = a + b;
    b = a - b;
    a = a - b;

    // Exibir os valores trocados
    printf("Valor de a (trocado): %d\n", a);
    printf("Valor de b (trocado): %d\n", b);

    return 0;
}

Lembre-se de testar seus programas e explorar diferentes cen√°rios para garantir que funcionem corretamente! üåü
